from AC_controller.constants import AC_TEMP, FAN_DIR_SERVO_POSITION

UART_DEBOUNCE_TIMEOUT = 100
CAN_DEBOUNCE_TIMEOUT = 10


class PINS:

    ONE_WIRE_TEMP_SENSORS = 22

    AC_COMPRESSOR_RELAY = 21
    AC_CYCLE_RELAY = 20
    AC_COMPRESSOR_FAN_RELAY = 19
    AC_COOLANT_RELAY = 18
    AC_REAR_WINDOW_HEAT_RELAY = 17

    AC_TEMP_SERVO = 10
    FAN_DIR_WINDOW_SERVO = 11
    FAN_DIR_DOWN_MIDDLE_SERVO = 12
    AC_FAN = 13
    SEAT_HEAT_L = 14
    SEAT_HEAT_R = 15


class TEMP_SENSORS:
    INT = 1
    INT_L = 2
    INT_R = 3
    COOLER = 4
    MIXED = 5


ONE_WIRE_TEMP_SENSORS = {
    TEMP_SENSORS.INT: b'\x28\x2b\x38\x59\x94\x21\x06\xcf',
    TEMP_SENSORS.INT_L: b'\x28\xce\x21\x50\x95\x21\x06\xba',
    TEMP_SENSORS.INT_R: b'\x28\x86\xe6\x66\x94\x21\x06\xf7',
    TEMP_SENSORS.MIXED: b'\x28\x02\xbc\x50\x94\x21\x06\xa8',
    TEMP_SENSORS.COOLER: b'\x28\xa4\x63\x57\x94\x21\x06\xf1',
}
#ONE_WIRE_TEMP_SENSORS_NAME_TO_ID = {v: k for k, v in ONE_WIRE_TEMP_SENSORS_ID_TO_NAME.items()}

ONE_WIRE_MEASURE_TIME = 750
ONE_WIRE_MEASURE_PERIOD = 1000  # ms


EXT_TEMP_RANGE = [x for x in range(-39, 80)]  # [-39, ... 79]

AC_LOWEST_TEMP = 16.5
AC_HIGHEST_TEMP = 31

AC_TEMP_DEVIATION = 2


FAN_DIR_SERVO_POSITIONS = [FAN_DIR_SERVO_POSITION.LEFT, FAN_DIR_SERVO_POSITION.MIDDLE, FAN_DIR_SERVO_POSITION.RIGHT]
FAN_DIR_WINDOW_DUTIES = {FAN_DIR_SERVO_POSITION.LEFT: 1600,
                         FAN_DIR_SERVO_POSITION.MIDDLE:  4320,
                         FAN_DIR_SERVO_POSITION.RIGHT: 7040}

FAN_DIR_DOWN_MIDDLE_DUTIES = {FAN_DIR_SERVO_POSITION.LEFT: 1600,
                              FAN_DIR_SERVO_POSITION.MIDDLE:  4320,
                              FAN_DIR_SERVO_POSITION.RIGHT: 7040}

AC_TEMP_RANGE = [x for x in range(0, 29)] + [AC_TEMP.AC_TEMP_HI]  # will be converted to [LO, 17.0, 17.5, ... 30.5, HI]
#res = max(AC_LOWEST_TEMP, min(AC_HIGHEST_TEMP, AC_LOWEST_TEMP + (temp-1) * 0.5))
AC_TEMP_DUTIES_RANGE = [1600, 7040]


FAN_SPEED_RANGE = [0, 1400, 1500, 1700, 2000, 3000, 4000, 5000]  # [0, 1, 2, 3, 4, 5, 6, 7]
FAN_PWM_FREQ = 20000


SERVO_PWM_FREQ = 50

SEAT_HEAT_RANGE = [0, 1, 2, 3]
SEAT_HEAT_DUTIES_RANGE = [1600, 7040]


# 0 - 1023 ESP32
# servo * 64 -> 110 * 64 = servo.duty_u16(7040)


class UART:
    ID = 0
    HEADER = 0x2e
    BAUDRATE = 38400
    CHECKSUM_XOR = 0xff
    TX_PIN = 0
    RX_PIN = 1
    RESPONSE_TIMEOUT = 0.2


class CAN:
    ID = 0
    SPI_BAUDRATE = 10000000
    BITRATE = 47619  # bps
    SPI_SCK_PIN = 2
    SPI_MOSI_PIN = 3  # RP -> TX
    SPI_MISO_PIN = 4  # RP -> RX
    SPI_CS_PIN = 5


class F_PARKING_RANGE:
    L = [0, 1, 2, 4, 6, 8]
    LC = [0, 1, 2, 4, 6, 8, 9]
    RC = [0, 1, 2, 4, 6, 8, 9]
    R = [0, 1, 2, 4, 6, 8]


class R_PARKING_RANGE:
    L = [0, 1, 2, 4, 6, 8]
    LC = [0, 1, 2, 4, 6, 8, 9]
    RC = [0, 1, 2, 4, 6, 8, 9]
    R = [0, 1, 2, 4, 6, 8]

PARKING_SENSOR_VALUES_RANGE = [0, 255]
